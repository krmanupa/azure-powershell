// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using Azure.ResourceManager.Resources;

namespace AuotmationHWGManagementClient
{
    /// <summary> A class to add extension methods to AuotmationHWGManagementClient. </summary>
    public static partial class AuotmationHWGManagementClientExtensions
    {
        private static ResourceGroupResourceExtensionClient GetExtensionClient(ResourceGroupResource resourceGroupResource)
        {
            return resourceGroupResource.GetCachedClient((client) =>
            {
                return new ResourceGroupResourceExtensionClient(client, resourceGroupResource.Id);
            }
            );
        }

        /// <summary> Gets a collection of HybridRunbookWorkerGroupResources in the ResourceGroupResource. </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="automationAccountName"> The name of the automation account. </param>
        /// <exception cref="ArgumentException"> <paramref name="automationAccountName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="automationAccountName"/> is null. </exception>
        /// <returns> An object representing collection of HybridRunbookWorkerGroupResources and their operations over a HybridRunbookWorkerGroupResource. </returns>
        public static HybridRunbookWorkerGroupCollection GetHybridRunbookWorkerGroups(this ResourceGroupResource resourceGroupResource, string automationAccountName)
        {
            Argument.AssertNotNullOrEmpty(automationAccountName, nameof(automationAccountName));

            return GetExtensionClient(resourceGroupResource).GetHybridRunbookWorkerGroups(automationAccountName);
        }

        /// <summary>
        /// Retrieve a hybrid runbook worker group.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}
        /// Operation Id: HybridRunbookWorkerGroup_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="automationAccountName"> The name of the automation account. </param>
        /// <param name="hybridRunbookWorkerGroupName"> The hybrid runbook worker group name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="automationAccountName"/> or <paramref name="hybridRunbookWorkerGroupName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="automationAccountName"/> or <paramref name="hybridRunbookWorkerGroupName"/> is null. </exception>
        [ForwardsClientCalls]
        public static async Task<Response<HybridRunbookWorkerGroupResource>> GetHybridRunbookWorkerGroupAsync(this ResourceGroupResource resourceGroupResource, string automationAccountName, string hybridRunbookWorkerGroupName, CancellationToken cancellationToken = default)
        {
            return await resourceGroupResource.GetHybridRunbookWorkerGroups(automationAccountName).GetAsync(hybridRunbookWorkerGroupName, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Retrieve a hybrid runbook worker group.
        /// Request Path: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Automation/automationAccounts/{automationAccountName}/hybridRunbookWorkerGroups/{hybridRunbookWorkerGroupName}
        /// Operation Id: HybridRunbookWorkerGroup_Get
        /// </summary>
        /// <param name="resourceGroupResource"> The <see cref="ResourceGroupResource" /> instance the method will execute against. </param>
        /// <param name="automationAccountName"> The name of the automation account. </param>
        /// <param name="hybridRunbookWorkerGroupName"> The hybrid runbook worker group name. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentException"> <paramref name="automationAccountName"/> or <paramref name="hybridRunbookWorkerGroupName"/> is an empty string, and was expected to be non-empty. </exception>
        /// <exception cref="ArgumentNullException"> <paramref name="automationAccountName"/> or <paramref name="hybridRunbookWorkerGroupName"/> is null. </exception>
        [ForwardsClientCalls]
        public static Response<HybridRunbookWorkerGroupResource> GetHybridRunbookWorkerGroup(this ResourceGroupResource resourceGroupResource, string automationAccountName, string hybridRunbookWorkerGroupName, CancellationToken cancellationToken = default)
        {
            return resourceGroupResource.GetHybridRunbookWorkerGroups(automationAccountName).Get(hybridRunbookWorkerGroupName, cancellationToken);
        }

        #region HybridRunbookWorkerGroupResource
        /// <summary>
        /// Gets an object representing a <see cref="HybridRunbookWorkerGroupResource" /> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="HybridRunbookWorkerGroupResource.CreateResourceIdentifier" /> to create a <see cref="HybridRunbookWorkerGroupResource" /> <see cref="ResourceIdentifier" /> from its components.
        /// </summary>
        /// <param name="client"> The <see cref="ArmClient" /> instance the method will execute against. </param>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="HybridRunbookWorkerGroupResource" /> object. </returns>
        public static HybridRunbookWorkerGroupResource GetHybridRunbookWorkerGroupResource(this ArmClient client, ResourceIdentifier id)
        {
            return client.GetResourceClient(() =>
            {
                HybridRunbookWorkerGroupResource.ValidateResourceId(id);
                return new HybridRunbookWorkerGroupResource(client, id);
            }
            );
        }
        #endregion
    }
}
